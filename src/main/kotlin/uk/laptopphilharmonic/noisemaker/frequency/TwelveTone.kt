package uk.laptopphilharmonic.noisemaker.frequency

import kotlin.math.abs
import kotlin.math.pow

/**
 * The frequencies of standard MIDI 12 tone equal temperament notes, with option to change default tuning of A4=400hz
 */
class TwelveTone(a4Frequency: Frequency = 440.0.hz) {

    val allNotes: List<Frequency>

    init {
        // A4 is note 69 in standard MIDI. We can work out all the other values using an algorithm based on this
        val tempList = mutableListOf<Frequency>()

        for (n in 0..127) {
            val diffFromA4 = 69 - n + 1 // Why plus 1? Need to figure this out
            val distanceFromA4 = abs(diffFromA4)
            if (diffFromA4 < 0) {
                tempList.add(a4Frequency / (twoRoot12.pow(distanceFromA4)))
            } else if (diffFromA4 > 0) {
                tempList.add(a4Frequency * (twoRoot12.pow(distanceFromA4)))
            } else {
                tempList.add(a4Frequency)
            }
        }

        allNotes = tempList.reversed()
    }

    val Bsh0 = allNotes[12]
    val C0 = allNotes[12]
    val Csh0 = allNotes[13]
    val Db0 = allNotes[13]
    val D0 = allNotes[14]
    val Dsh0 = allNotes[15]
    val Eb0 = allNotes[15]
    val E0 = allNotes[16]
    val Fb0 = allNotes[16]
    val Esh0 = allNotes[17]
    val F0 = allNotes[17]
    val Fsh0 = allNotes[18]
    val Gb0 = allNotes[18]
    val G0 = allNotes[19]
    val Gsh0 = allNotes[20]
    val Ab0 = allNotes[20]
    val A0 = allNotes[21] // Lowest note on piano
    val Ash0 = allNotes[22]
    val Bb0 = allNotes[22]
    val B0 = allNotes[23]
    val Cb0 = allNotes[23]

    val Bsh1 = allNotes[24]
    val C1 = allNotes[24]
    val Csh1 = allNotes[25]
    val Db1 = allNotes[25]
    val D1 = allNotes[26]
    val Dsh1 = allNotes[27]
    val Eb1 = allNotes[27]
    val E1 = allNotes[28]
    val Fb1 = allNotes[28]
    val Esh1 = allNotes[29]
    val F1 = allNotes[29]
    val Fsh1 = allNotes[30]
    val Gb1 = allNotes[30]
    val G1 = allNotes[31]
    val Gsh1 = allNotes[32]
    val Ab1 = allNotes[32]
    val A1 = allNotes[33]
    val Ash1 = allNotes[34]
    val Bb1 = allNotes[34]
    val B1 = allNotes[35]
    val Cb1 = allNotes[35]

    val Bsh2 = allNotes[36]
    val C2 = allNotes[36]
    val Csh2 = allNotes[37]
    val Db2 = allNotes[37]
    val D2 = allNotes[38]
    val Dsh2 = allNotes[39]
    val Eb2 = allNotes[39]
    val E2 = allNotes[40]
    val Fb2 = allNotes[40]
    val Esh2 = allNotes[41]
    val F2 = allNotes[41]
    val Fsh2 = allNotes[42]
    val Gb2 = allNotes[42]
    val G2 = allNotes[43]
    val Gsh2 = allNotes[44]
    val Ab2 = allNotes[44]
    val A2 = allNotes[45]
    val Ash2 = allNotes[46]
    val Bb2 = allNotes[46]
    val B2 = allNotes[47]
    val Cb2 = allNotes[47]

    val Bsh3 = allNotes[48]
    val C3 = allNotes[48]
    val Csh3 = allNotes[49]
    val Db3 = allNotes[49]
    val D3 = allNotes[50]
    val Dsh3 = allNotes[51]
    val Eb3 = allNotes[51]
    val E3 = allNotes[52]
    val Fb3 = allNotes[52]
    val Esh3 = allNotes[53]
    val F3 = allNotes[53]
    val Fsh3 = allNotes[54]
    val Gb3 = allNotes[54]
    val G3 = allNotes[55]
    val Gsh3 = allNotes[56]
    val Ab3 = allNotes[56]
    val A3 = allNotes[57]
    val Ash3 = allNotes[58]
    val Bb3 = allNotes[58]
    val B3 = allNotes[59]
    val Cb3 = allNotes[59]

    val Bsh4 = allNotes[60]
    val C4 = allNotes[60]
    val Csh4 = allNotes[61]
    val Db4 = allNotes[61]
    val D4 = allNotes[62]
    val Dsh4 = allNotes[63]
    val Eb4 = allNotes[63]
    val E4 = allNotes[64]
    val Fb4 = allNotes[64]
    val Esh4 = allNotes[65]
    val F4 = allNotes[65]
    val Fsh4 = allNotes[66]
    val Gb4 = allNotes[66]
    val G4 = allNotes[67]
    val Gsh4 = allNotes[68]
    val Ab4 = allNotes[68]
    val A4 = allNotes[69]
    val Ash4 = allNotes[70]
    val Bb4 = allNotes[70]
    val B4 = allNotes[71]
    val Cb4 = allNotes[71]

    val Bsh5 = allNotes[72]
    val C5 = allNotes[72]
    val Csh5 = allNotes[73]
    val Db5 = allNotes[73]
    val D5 = allNotes[74]
    val Dsh5 = allNotes[75]
    val Eb5 = allNotes[75]
    val E5 = allNotes[76]
    val Fb5 = allNotes[76]
    val Esh5 = allNotes[77]
    val F5 = allNotes[77]
    val Fsh5 = allNotes[78]
    val Gb5 = allNotes[78]
    val G5 = allNotes[79]
    val Gsh5 = allNotes[80]
    val Ab5 = allNotes[80]
    val A5 = allNotes[81]
    val Ash5 = allNotes[82]
    val Bb5 = allNotes[82]
    val B5 = allNotes[83]
    val Cb5 = allNotes[83]

    val Bsh6 = allNotes[84]
    val C6 = allNotes[84]
    val Csh6 = allNotes[85]
    val Db6 = allNotes[85]
    val D6 = allNotes[86]
    val Dsh6 = allNotes[87]
    val Eb6 = allNotes[87]
    val E6 = allNotes[88]
    val Fb6 = allNotes[88]
    val Esh6 = allNotes[89]
    val F6 = allNotes[89]
    val Fsh6 = allNotes[90]
    val Gb6 = allNotes[90]
    val G6 = allNotes[91]
    val Gsh6 = allNotes[92]
    val Ab6 = allNotes[92]
    val A6 = allNotes[93]
    val Ash6 = allNotes[94]
    val Bb6 = allNotes[94]
    val B6 = allNotes[95]
    val Cb6 = allNotes[95]

    val Bsh7 = allNotes[96]
    val C7 = allNotes[96]
    val Csh7 = allNotes[97]
    val Db7 = allNotes[97]
    val D7 = allNotes[98]
    val Dsh7 = allNotes[99]
    val Eb7 = allNotes[99]
    val E7 = allNotes[100]
    val Fb7 = allNotes[100]
    val Esh7 = allNotes[101]
    val F7 = allNotes[101]
    val Fsh7 = allNotes[102]
    val Gb7 = allNotes[102]
    val G7 = allNotes[103]
    val Gsh7 = allNotes[104]
    val Ab7 = allNotes[104]
    val A7 = allNotes[105]
    val Ash7 = allNotes[106]
    val Bb7 = allNotes[106]
    val B7 = allNotes[107]
    val Cb7 = allNotes[107]

    val Bsh8 = allNotes[108]
    val C8 = allNotes[108] // Highest note on piano
    val Csh8 = allNotes[109]
    val Db8 = allNotes[109]
    val D8 = allNotes[110]
    val Dsh8 = allNotes[111]
    val Eb8 = allNotes[111]
    val E8 = allNotes[112]
    val Fb8 = allNotes[112]
    val Esh8 = allNotes[113]
    val F8 = allNotes[113]
    val Fsh8 = allNotes[114]
    val Gb8 = allNotes[114]
    val G8 = allNotes[115]
    val Gsh8 = allNotes[116]
    val Ab8 = allNotes[116]
    val A8 = allNotes[117]
    val Ash8 = allNotes[118]
    val Bb8 = allNotes[118]
    val B8 = allNotes[119]
    val Cb8 = allNotes[119]

    val Bsh9 = allNotes[120]
    val C9 = allNotes[120]
    val Csh9 = allNotes[121]
    val Db9 = allNotes[121]
    val D9 = allNotes[122]
    val Dsh9 = allNotes[123]
    val Eb9 = allNotes[123]
    val E9 = allNotes[124]
    val Fb9 = allNotes[124]
    val Esh9 = allNotes[125]
    val F9 = allNotes[125]
    val Fsh9 = allNotes[126]
    val Gb9 = allNotes[126]
    val G9 = allNotes[127]

    companion object {
        val twoRoot12: Double = 2.0.pow(1.0 / 12.0)
    }

}